{"version":3,"sources":["js/transformations.js","js/index.js"],"names":["shuffle","arr","i","length","randIndInRange","Math","floor","random","swap","shufflePixels","canvas","ctx","imgData","getImageData","width","height","data","putImageData","channel1","channel2","colors","swap1","indexOf","swap2","Error","temp","invert","newData","j","push","sortPixels","imageSmoothingEnabled","console","time","Uint32Array","checkpoint","sort","a","b","n","timeEnd","document","getElementById","getContext","invertEm","swapEm","shuffleEm","sortButton","upload","resetButton","img","uploadHandler","file","files","src","URL","createObjectURL","draw","drawImage","revokeObjectURL","complete","addEventListener","querySelector","value"],"mappings":";;ACAA;;AAEA,IAAMU,MAAM,GAAG+B,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,IAAM/B,GAAG,GAAGD,MAAM,CAACiC,UAAP,CAAkB,IAAlB,CAAZ;AACA,IAAMC,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAjB;AACA,ADLA,ICKMG,ADLA7C,MCKM,CDLC,ECKEyC,CDLC,OCKO,CAACC,CDLlB1C,OAAU,CAACC,GAAD,ECKD,ADLU,CCKc,cAAxB,CAAf;AACA,ADLE,ICKI6C,GDLC,IAAI5C,CAAC,CCKG,EDLA,CCKGuC,ADLhB,EAAgBvC,CAAC,GAAGD,ECKI,CAACyC,ADLF,CAACvC,MAAxB,EAAgCD,CAAC,EAAjC,ECKgB,ADLqB,CCKG,WAAxB,CAAlB;AACA,ADLI,ICKE6C,UAAU,GAAGN,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAnB;AACA,ADLI,ICKEM,IDLE9C,CAAC,CCKG,EDLA,CCKGuC,ADLP,KAAU,CAAd,ECKmB,ADLF,CCKGC,cAAT,CAAwB,cAAxB,CAAf;AACA,ADLM,ICKAO,WAAW,GAAGR,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAApB;AACA,ADLM,ICKAQ,GAAG,GAAGT,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAZ;ADJM,UAAItC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,GAAG,CAACE,MAApB,GAA6B,CAAxC,IAA6C,CAAlE,CAHe,CAIb;ACKR,IAAMgD,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,ADLM,MCKFC,IAAI,GAAGJ,ADLE5C,MCKI,CAACiD,KAAP,CAAa,CAAb,ADLgB,CCK3B,EDL8B,CAAjB,KAAuB,CAA9B,EAAiC;ACMvCH,ADLQ9C,ECKR8C,GAAG,CAACI,EDLIlD,CCKR,GAAUmD,GAAG,CAACC,MDLQ,GAAGnD,IAAI,CAACC,CCKpB,CAAoB8C,GDLL,CCKf,ADL0B/C,CCKpC,GDLwC,CAACE,MAAL,KAAgBN,GAAG,CAACE,MAApB,GAA6B,CAAxC,IAA6C,CAA9D;ACMT,ADLQ,CCET,MDTqB,CAQf;;ACMN,IAAMsD,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB/C,ADNI,ECMJA,MAAM,CAACK,CDNCP,KCMR,ADNY,GCMI0C,ADNDjD,GCMI,ADND,CCMEc,ADNDb,CAAD,CAAd,ICMJ;AACAQ,ADNIT,ECMJS,IDNIT,ECME,CAACa,ADNA,CAACZ,CAAD,CAAH,ECMJ,CDNaD,ECMEiD,CDNC,CAAC9C,CCMC,CAACU,KAAnB,ODNgB,CAAZ;ACOJH,ADNIV,ECMJU,GAAG,CAAC+C,ADNAzD,GAAG,CAACG,KCMR,CAAc8C,GAAd,EAAmB,CAAnB,EAAsB,ADNf,CCMP,ADNI,ECMqBA,CDNC1C,ECME,CAACM,EDNzB,GCMJ,EAAoCoC,GAAG,CAACnC,MAAxC;AACAwC,ADNG,ECMHA,GAAG,CAACI,eAAJ,CAAoBT,GAAG,CAACI,GAAxB;AACD,ADNE,CCCH;;AAOA,ADPE,ICOEJ,GAAG,CAACU,CDPC3D,GAAP,ICOF,EAAkB;AAChBwD,ADPD,CAlBD,CCyBEA,IAAI;AACL;ADND,IAAMhD,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,GAAT,EAAiB;ACOvCuC,ADNE,GCMC,CAACW,EDNEjD,OAAO,GAAGD,GAAG,CCMnB,ADNoBE,CCMC,MAArB,EAA6B4C,GDNb,CCMhB,ADNiC,CAAjB,EAAoB,CAApB,EAAuB/C,MAAM,CAACI,KAA9B,EAAqCJ,MAAM,CAACK,MAA5C,CAAd;ACOFiC,ADNE,MCMI,ADNAhC,CCMC6C,GDNG,GAAGjD,OAAO,CAACI,ECMrB,CAAwB,CDNtB,OCMF,EAAkCmC,aAAlC;AACAP,ADNE5B,EAAAA,IAAI,ECME,CAAC6C,ADNA7D,OAAO,CAACgB,IAAD,CAAd,GCMF,CAA0B,OAA1B,EAAmC;AAAA,ADLjCL,EAAAA,GAAG,CAACM,GCKmC,SDLvC,CAAiBL,OAAjB,EAA0B,CAA1B,EAA6B,CAA7B,MCK8CF,MAAP,EAAeC,GAAf,CAAN;AAAA,ADJlC,CCID,ADTA;ACUAkC,MAAM,CAACgB,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;AACrC,6BAAKnD,MAAL,EAAaC,GAAb,EAAkB8B,QAAQ,CAACqB,aAAT,CAAuB,WAAvB,EAAoCC,KAAtD,EAA6DtB,QAAQ,CAACqB,aAAT,CAAuB,WAAvB,EAAoCC,KAAjG;AACD,CAFD;AAGAhB,ADNA,IAAMvC,IAAI,ECMA,CAACqD,ADNE,SAAPrD,IAAO,CAACE,ECMd,CAA4B,GDNf,EAASC,ECMtB,CDNa,CCMwB,CDNVO,QAAd,EAAwBC,QAAxB,EAAqC;ACMb,ADLnC,MAAMC,GCKmC,GDL7B,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAAf,GCKoDV,MAAX,EAAmBC,GAAnB,CAAN;AAAA,ADJnC,CCIF,KDJQU,KAAK,GAAID,MAAM,CAACE,OAAP,CAAeJ,QAAf,CAAf;ACKF4B,ADJE,MAAMvB,GCIC,CAACsC,CDJG,GAAIzC,MAAM,CAACE,KCIxB,CAA2B,CDJV,CAAeH,KCIhC,EAAoC,CDJnB,CAAf;ACIkC,ADHlC,MAAIE,GCGoC,EDH/B,GAAG,CAAR,IAAaE,KAAK,GAAG,CAAzB,EAA4B,MAAM,IAAIC,KCGgBd,ADHpB,CAAU,KCGJ,EAAsBC,GAAtB,CAAN,QDHA,CAAN;ACGM,ADFlC,CCEF,KDFMC,OAAO,GAAGD,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBH,MAAM,CAACI,KAA9B,EAAqCJ,MAAM,CAACK,MAA5C,CAAd;ACGFkC,ADFE,MAAIjC,IAAI,CCEC,CAAC6C,CDFCjD,OAAO,CAACI,IAAnB,GCEF,CAA6B,OAA7B,EAAsCyC,IAAtC;;ADAE,OAAK,IAAIvD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,IAAI,CAACb,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,QAAIuB,IAAI,GAAGT,IAAI,CAACd,CAAC,GAAGmB,KAAL,CAAf;AACAL,IAAAA,IAAI,CAACd,CAAC,GAAGmB,KAAL,CAAJ,GAAkBL,IAAI,CAACd,CAAC,GAAGqB,KAAL,CAAtB;AACAP,IAAAA,IAAI,CAACd,CAAC,GAAGqB,KAAL,CAAJ,GAAkBE,IAAlB;AACD;;AACDd,EAAAA,GAAG,CAACM,YAAJ,CAAiBL,OAAjB,EAA0B,CAA1B,EAA6B,CAA7B;AACD,CAdD;;;;AAgBA,IAAMc,MAAM,GAAG,SAATA,MAAS,CAAChB,MAAD,EAASC,GAAT,EAAiB;AAC9B,MAAIC,OAAO,GAAGD,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBH,MAAM,CAACI,KAA9B,EAAqCJ,MAAM,CAACK,MAA5C,CAAd;AACA,MAAIC,IAAI,GAAGJ,OAAO,CAACI,IAAnB;AACA,MAAIW,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACb,MAAzB,EAAiCyB,CAAC,IAAI,CAAtC,EAAyC;AACvCD,IAAAA,OAAO,CAACE,IAAR,CAAa,MAAMb,IAAI,CAACY,CAAD,CAAvB,EAA4B,MAAMZ,IAAI,CAACY,CAAC,GAAC,CAAH,CAAtC,EAA6C,MAAMZ,IAAI,CAACY,CAAC,GAAC,CAAH,CAAvD,EAA8D,GAA9D;AACD;;AACD,OAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,IAAI,CAACb,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCc,IAAAA,IAAI,CAACd,CAAD,CAAJ,GAAUyB,OAAO,CAACzB,CAAD,CAAjB;AACD;;AACHS,EAAAA,GAAG,CAACM,YAAJ,CAAiBL,OAAjB,EAA0B,CAA1B,EAA6B,CAA7B;AACC,CAZD;;;;AAcA,IAAMkB,UAAU,GAAG,SAAbA,UAAa,CAACpB,MAAD,EAASC,GAAT,EAAiB;AAClCA,EAAAA,GAAG,CAACoB,qBAAJ,GAA4B,KAA5B;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAa,OAAb;AACA,MAAIrB,OAAO,GAAGD,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBH,MAAM,CAACI,KAA9B,EAAqCJ,MAAM,CAACK,MAA5C,CAAd;AACA,MAAIC,IAAI,GAAGJ,OAAO,CAACI,IAAnB;AAEA,MAAIW,OAAO,GAAG,IAAIO,WAAJ,CAAgBlB,IAAI,CAACb,MAAL,GAAc,CAA9B,CAAd;;AAEA,OAAK,IAAID,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGc,IAAI,CAACb,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,QAAIiC,UAAU,GAAIjC,CAAC,GAAG,CAAtB;AACAyB,IAAAA,OAAO,CAACzB,CAAD,CAAP,GAAYc,IAAI,CAACmB,UAAD,CAAJ,IAAoB,EAApB,GAAyBnB,IAAI,CAACmB,UAAU,GAAG,CAAd,CAAJ,IAAwB,CAAjD,GAAqDnB,IAAI,CAACmB,UAAU,GAAG,CAAd,CAArE;AACD;;AAEDR,EAAAA,OAAO,CAACS,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,GAAGC,CAAd;AAAA,GAAb;;AAEA,OAAK,IAAIpC,EAAT,IAAcyB,OAAd,EAAuB;AACrB,QAAIQ,WAAU,GAAGjC,EAAC,GAAG,CAArB;;AACA,QAAIqC,CAAC,GAAGZ,OAAO,CAACzB,EAAD,CAAf;AACAc,IAAAA,IAAI,CAACmB,WAAD,CAAJ,GAAmBI,CAAC,IAAI,EAAxB;AACAvB,IAAAA,IAAI,CAACmB,WAAU,GAAG,CAAd,CAAJ,GAAwBI,CAAC,IAAI,CAAN,GAAW,IAAlC;AACAvB,IAAAA,IAAI,CAACmB,WAAU,GAAG,CAAd,CAAJ,GAAuBI,CAAC,GAAG,IAA3B;AACD;;AACDP,EAAAA,OAAO,CAACQ,OAAR,CAAgB,OAAhB;AACA7B,EAAAA,GAAG,CAACM,YAAJ,CAAiBL,OAAjB,EAA0B,CAA1B,EAA6B,CAA7B;AACD,CAxBD","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["const shuffle = (arr) => {\n  for (let i = 0; i < arr.length; i++) {\n    // Every 4th index is an alpha value and should be 255. Don't change those.\n    if (i % 4 !== 3) {\n      // Selection range shrinks by one from left every loop\n      // e.g. [0, 1, 2, 3] -> [1, 2, 3] -> [2, 3] -> [3]\n      let randIndInRange = Math.floor(Math.random() * arr.length - 1) + 1;\n        // If selection is on 4th index (an alpha value), re-select.\n        while (randIndInRange % 4 === 3) {\n          randIndInRange = Math.floor(Math.random() * arr.length - 1) + 1;\n        }\n      // swap i and random index\n      let swap = arr[i];\n      arr[i] = arr[randIndInRange];\n      arr[randIndInRange] = swap;\n    }\n  }\n  return arr;\n}\n\nconst shufflePixels = (canvas, ctx) => {\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let data = imgData.data;\n  data = shuffle(data);\n  ctx.putImageData(imgData, 0, 0);\n}\n\nconst swap = (canvas, ctx, channel1, channel2) => {\n  const colors = ['red', 'green', 'blue'];\n  const swap1 =  colors.indexOf(channel1);\n  const swap2 =  colors.indexOf(channel2);\n  if (swap1 < 0 || swap2 < 0) throw new Error('Invalid Arguments');\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let data = imgData.data;\n\n  for (let i = 0; i < data.length; i += 4) {\n    let temp = data[i + swap1];\n    data[i + swap1] = data[i + swap2];\n    data[i + swap2] = temp;\n  }\n  ctx.putImageData(imgData, 0, 0);\n}\n\nconst invert = (canvas, ctx) => {\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let data = imgData.data;\n  let newData = [];\n\n  for (let j = 0; j < data.length; j += 4) {\n    newData.push(255 - data[j], 255 - data[j+1], 255 - data[j+2], 255);\n  }\n  for (let i = 0; i < data.length; i++) {\n    data[i] = newData[i];\n  }\nctx.putImageData(imgData, 0, 0);\n}\n\nconst sortPixels = (canvas, ctx) => {\n  ctx.imageSmoothingEnabled = false\n  console.time('start')\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let data = imgData.data;\n\n  let newData = new Uint32Array(data.length / 4);\n\n  for (let i=0; i < data.length; i++) {\n    let checkpoint =  i * 4\n    newData[i]= data[checkpoint] << 16 | data[checkpoint + 1] << 8 | data[checkpoint + 2];\n  }\n\n  newData.sort((a, b) => a - b);\n\n  for (let i in newData) {\n    let checkpoint = i * 4\n    let n = newData[i]\n    data[checkpoint] = n >> 16;\n    data[checkpoint + 1] = (n >> 8) & 0xff;\n    data[checkpoint + 2] = n & 0xff;\n  }\n  console.timeEnd('start')\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport { shufflePixels, swap, invert, sortPixels };\n","import { shufflePixels, invert, swap, sortPixels } from './transformations';\n\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\nconst invertEm = document.getElementById('invert');\nconst swapEm = document.getElementById('swapChannels');\nconst shuffleEm = document.getElementById('shuffleEm');\nconst sortButton = document.getElementById('sortEm');\nconst upload = document.getElementById('image-upload');\nconst resetButton = document.getElementById('reset');\nconst img = document.getElementById('source-image');\n\nconst uploadHandler = () => {\n  let file = upload.files[0];\n  img.src = URL.createObjectURL(file);\n}\n\nconst draw = () => {\n  canvas.height = img.height;\n  canvas.width = img.width;\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n  URL.revokeObjectURL(img.src);\n}\n\nif (img.complete) {\n  draw();\n}\nimg.addEventListener('load', draw);\nupload.addEventListener('change', uploadHandler);\ninvertEm.addEventListener('click', () => invert(canvas, ctx));\nswapEm.addEventListener('click', () => {\n  swap(canvas, ctx, document.querySelector('#channel1').value, document.querySelector('#channel2').value);\n})\nsortButton.addEventListener('click', () => sortPixels(canvas, ctx));\nshuffleEm.addEventListener('click', () => shufflePixels(canvas, ctx));\nresetButton.addEventListener('click', draw);\n"]}